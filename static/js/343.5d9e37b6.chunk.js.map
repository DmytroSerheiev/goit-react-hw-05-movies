{"version":3,"file":"static/js/343.5d9e37b6.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","page/Movie/Movie.styled.js","page/Movie/Movie.jsx","service/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Poster = styled.img`\n  width: 395px;\n  height: 535px;\n  object-fit: cover;\n  border-top-left-radius: 6px;\n  border-top-right-radius: 6px;\n`;\n\nexport const InfoTextBox = styled.div`\n  padding-top: 12px;\n  padding-left: 12px;\n`;\n\nexport const Tittle = styled.h2`\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 14px;\n  letter-spacing: 0.04em;\n`;\n\nexport const Info = styled.p`\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 16px;\n  letter-spacing: 0.04em;\n`;\n\nexport const Rate = styled.span`\n  background-color: orange;\n  padding: 3px 12px;\n  color: #000;\n  border-radius: 5px;\n`;\n","import PropTypes from 'prop-types';\nimport { Info, InfoTextBox, Poster, Rate, Tittle } from './MovieCard.styled';\n\nconst generatePosterImgLink = poster_path => {\n  const basePosterUrl = 'https://image.tmdb.org/t/p/';\n  const fileSize = `w300`;\n\n  return `${basePosterUrl}${fileSize}${poster_path}`;\n};\n\nexport const MovieCard = ({\n  id,\n  title,\n  poster,\n  releaseDate,\n  voteAverage = 1,\n}) => {\n  return (\n    <>\n      <div>\n        <Poster\n          src={generatePosterImgLink(poster)}\n          alt={title}\n          loading=\"lazy\"\n        />\n      </div>\n      <InfoTextBox>\n        <Tittle>{title.toUpperCase()}</Tittle>\n        <Info>\n          {new Date(releaseDate).getFullYear()}\n          <Rate>{voteAverage.toFixed(1)}</Rate>\n        </Info>\n      </InfoTextBox>\n    </>\n  );\n};\nMovieCard.propTypes = { MovieCard: PropTypes.string };\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  font-weight: ${p => p.theme.fontWeights.heading};\n\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: 960px;\n  grid-gap: 32px 16px;\n  justify-content: center;\n  grid-auto-rows: auto;\n  padding-top: ${p => p.theme.space[3]};\n  padding-bottom: ${p => p.theme.space[4]};\n  margin-left: auto;\n  margin-right: auto;\n  grid-template-columns: repeat(3, 1fr);\n`;\n\nexport const MovieBoxCard = styled.li`\n  display: flex;\n  flex-direction: column;\n  // align-items: center;\n  border-radius: 6px;\n  border: 1px solid #000;\n  transition: transform 400ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 600ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  }\n`;\n","import { MovieCard } from 'components/MovieCard/MovieCard';\nimport { Link, List, MovieBoxCard } from './MovieList.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport const MovieList = ({ collection }) => {\n  const location = useLocation();\n  const prevURL = location.pathname === '/' ? '/movie/' : '';\n  return (\n    <>\n      <List>\n        {collection.map(\n          ({ id, title, poster_path, release_date, vote_average }) => (\n            <MovieBoxCard key={id}>\n              <Link to={`${prevURL}${id}`} state={{ from: location }}>\n                <MovieCard\n                  title={title}\n                  id={id}\n                  poster={poster_path}\n                  releaseDate={release_date}\n                  voteAverage={vote_average}\n                />\n              </Link>\n            </MovieBoxCard>\n          )\n        )}\n      </List>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\n\nexport const SearchForm = styled(Form)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  border: 1px solid #000;\n  margin: 0 auto;\n`;\n\nexport const InputText = styled(Field)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const SearchButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n`;\n\nexport const SearchButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n","import { SearchForm, SearchButton, InputText } from './SearchBar.styled';\nimport { BiSearchAlt } from 'react-icons/bi';\nimport { Formik } from 'formik';\nimport PropTypes from 'prop-types';\n\nconst initialValues = {\n  query: '',\n};\nexport const Searchbar = ({ onSubmit }) => {\n  const handleSubmit = (value, { resetForm }) => {\n    if (value.query.trim() === '') {\n      return;\n    }\n    onSubmit(value.query);\n    resetForm();\n  };\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n      <SearchForm>\n        <SearchButton type=\"submit\">\n          <BiSearchAlt />\n        </SearchButton>\n\n        <InputText name=\"query\" type=\"text\" />\n      </SearchForm>\n    </Formik>\n  );\n};\n\nSearchbar.propTypes = { onSubmit: PropTypes.func };\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 0 16px;\n`;\n","import { Searchbar } from 'components/SearchBar/SearchBar';\nimport { Outlet, useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getSearchMovies } from 'service/Api';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { Container } from './Movie.styled';\n\nconst Movie = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const q = searchParams.get('query') ?? '';\n  const [moviesCollection, setmoviesCollection] = useState([]);\n\n  useEffect(() => {\n    if (q) {\n      getSearchMovies(q).then(data => setmoviesCollection(data.results));\n    }\n  }, [q]);\n\n  const updateQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <Container>\n      <Searchbar onSubmit={q => updateQueryString(q)} />\n      <MovieList collection={moviesCollection} />\n      <Outlet />\n    </Container>\n  );\n};\nexport default Movie;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst userKey = '6fe1e9d5fbaeb01db6cc1b91ad7172fe';\n\nexport const getTrendingMovies = async (page = 1) => {\n  try {\n    const url = `3/trending/movie/day?api_key=${userKey}&page=${page}`;\n\n    const response = await axios.get(url);\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getSearchMovies = async (searchQuery, page = 1) => {\n  try {\n    const url = `3/search/movie?api_key=${userKey}&language=en-US&query=${searchQuery}&page=${page}&include_adult=false`;\n\n    const response = await axios.get(url);\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getMoviesByID = async movieID => {\n  try {\n    const url = `3/movie/${movieID}?api_key=${userKey}&language=en-UA`;\n\n    const response = await axios.get(url);\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieCastByID = async movieID => {\n  try {\n    const url = `3/movie/${movieID}/credits?api_key=${userKey}&language=en-US`;\n\n    const response = await axios.get(url);\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviewsByID = async movieID => {\n  try {\n    const url = `3/movie/${movieID}/reviews?api_key=${userKey}&language=en-US`;\n\n    const response = await axios.get(url);\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["Poster","styled","InfoTextBox","Tittle","Info","Rate","MovieCard","id","poster_path","title","poster","releaseDate","voteAverage","src","alt","loading","toUpperCase","Date","getFullYear","toFixed","Link","NavLink","p","theme","fontWeights","heading","List","space","MovieBoxCard","MovieList","collection","location","useLocation","prevURL","pathname","map","release_date","vote_average","to","state","from","SearchForm","Form","InputText","Field","SearchButton","initialValues","query","Searchbar","onSubmit","value","resetForm","trim","type","name","Container","useSearchParams","searchParams","setSearchParams","q","get","useState","moviesCollection","setmoviesCollection","useEffect","getSearchMovies","then","data","results","axios","userKey","getTrendingMovies","page","url","response","console","log","searchQuery","getMoviesByID","movieID","getMovieCastByID","getMovieReviewsByID"],"sourceRoot":""}