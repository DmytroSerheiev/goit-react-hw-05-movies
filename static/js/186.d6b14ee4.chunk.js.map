{"version":3,"file":"static/js/186.d6b14ee4.chunk.js","mappings":"8LAkCA,UA9BgB,WACd,OAA6BA,EAAAA,EAAAA,UAAS,IAAG,eAAlCC,EAAO,KAAEC,EAAS,KACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,OARAE,EAAAA,EAAAA,YAAU,WAIR,OAHIF,IACFG,EAAAA,EAAAA,IAAoBH,GAASI,MAAK,SAAAC,GAAI,OAAIN,EAAUM,EAAKC,QAAQ,IAE5D,WAAO,CAEhB,GAAG,KAGD,yBACGR,EAAQS,QACP,wBACGT,EAAQU,KAAI,gBAAGC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAASC,EAAE,EAAFA,GAAE,OACjC,2BACE,oCAAYF,MACZ,uBAAIC,MAFGC,EAGJ,OAIT,qCAIR,C,qLC9BAC,EAAAA,EAAAA,SAAAA,QAAyB,8BACzB,IAAMC,EAAU,mCAEHC,EAAiB,yCAAG,yGAEkD,OAF3CC,EAAI,+BAAG,EAAC,SAEtCC,EAAG,uCAAmCH,EAAO,gCAAwBE,GAAI,SAExDH,EAAAA,EAAAA,IAAUI,GAAK,KAAD,EAAvB,OAARC,EAAQ,yBAEPA,EAASZ,MAAI,gCAEpBa,QAAQC,IAAI,EAAD,IAAQ,yDAEtB,kBAV6B,mCAWjBC,EAAe,yCAAG,WAAOC,GAAW,4FAEiD,OAF/CN,EAAI,+BAAG,EAAC,SAEjDC,EAAG,iCAA6BH,EAAO,iCAAyBQ,EAAW,iBAASN,EAAI,iCAEvEH,EAAAA,EAAAA,IAAUI,GAAK,KAAD,EAAvB,OAARC,EAAQ,yBAEPA,EAASZ,MAAI,gCAEpBa,QAAQC,IAAI,EAAD,IAAQ,yDAEtB,gBAV2B,sCAWfG,EAAa,yCAAG,WAAMC,GAAO,8EAEW,OAFX,SAEhCP,EAAG,kBAAcO,EAAO,oBAAYV,EAAO,4BAE1BD,EAAAA,EAAAA,IAAUI,GAAK,KAAD,EAAvB,OAARC,EAAQ,yBAEPA,EAASZ,MAAI,gCAEpBa,QAAQC,IAAI,EAAD,IAAQ,yDAEtB,gBAVyB,sCAYbK,EAAgB,yCAAG,WAAMD,GAAO,8EAEgB,OAFhB,SAEnCP,EAAG,kBAAcO,EAAO,4BAAoBV,EAAO,4BAElCD,EAAAA,EAAAA,IAAUI,GAAK,KAAD,EAAvB,OAARC,EAAQ,yBAEPA,EAASZ,MAAI,gCAEpBa,QAAQC,IAAI,EAAD,IAAQ,yDAEtB,gBAV4B,sCAYhBhB,EAAmB,yCAAG,WAAMoB,GAAO,8EAEa,OAFb,SAEtCP,EAAG,kBAAcO,EAAO,4BAAoBV,EAAO,4BAElCD,EAAAA,EAAAA,IAAUI,GAAK,KAAD,EAAvB,OAARC,EAAQ,yBAEPA,EAASZ,MAAI,gCAEpBa,QAAQC,IAAI,EAAD,IAAQ,yDAEtB,gBAV+B,qC","sources":["components/Reviews/Reviews.jsx","service/Api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviewsByID } from 'service/Api';\n\nconst Reviews = () => {\n  const [reviews, setReview] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (movieId) {\n      getMovieReviewsByID(movieId).then(data => setReview(data.results));\n    }\n    return () => {};\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div>\n      {reviews.length ? (\n        <ul>\n          {reviews.map(({ author, content, id }) => (\n            <li key={id}>\n              <h3>Author:{author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <h2>Reviews</h2>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\nconst userKey = '6fe1e9d5fbaeb01db6cc1b91ad7172fe';\n\nexport const getTrendingMovies = async (page = 1) => {\n  try {\n    const url = `3/trending/movie/day?api_key=${userKey}&language=ru-US&page=${page}`;\n\n    const response = await axios.get(url);\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getSearchMovies = async (searchQuery, page = 1) => {\n  try {\n    const url = `3/search/movie?api_key=${userKey}&language=ru-US&query=${searchQuery}&page=${page}&include_adult=false`;\n\n    const response = await axios.get(url);\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getMoviesByID = async movieID => {\n  try {\n    const url = `3/movie/${movieID}?api_key=${userKey}&language=ru-US`;\n\n    const response = await axios.get(url);\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieCastByID = async movieID => {\n  try {\n    const url = `3/movie/${movieID}/credits?api_key=${userKey}&language=ru-US`;\n\n    const response = await axios.get(url);\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviewsByID = async movieID => {\n  try {\n    const url = `3/movie/${movieID}/reviews?api_key=${userKey}&language=ru-US`;\n\n    const response = await axios.get(url);\n\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["useState","reviews","setReview","movieId","useParams","useEffect","getMovieReviewsByID","then","data","results","length","map","author","content","id","axios","userKey","getTrendingMovies","page","url","response","console","log","getSearchMovies","searchQuery","getMoviesByID","movieID","getMovieCastByID"],"sourceRoot":""}